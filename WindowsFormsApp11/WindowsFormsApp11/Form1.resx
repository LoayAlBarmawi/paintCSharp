<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox17.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAAABGdBTUEAALGPC/xhBQAAAGNQTFRF////
        AAAAPz8/BwcHt7e3+fn5UFBQp6en7e3tMTExn5+f5OTkv7+/JSUlgoKCoqKiExMTXl5eICAgSUlJk5OT
        2NjYwsLCcnJyV1dXRUVFampqsbGxNjY2ZWVlEhISjY2Ny8vLcZDIZwAAAwlJREFUeF7t3NtS4kAUheFu
        UEQZHQVH56jz/k85JO6iEgmQ7t7HqfXfACl6k+8mpFKQhBBCCCGEEEIIIXTU5vn74sfPX9f0MmrXr8vc
        t72iLTFb//5gdD3QtoitbwnRF1cydsSVfHZElRw7YkqmHBEl0454klOOaJLTjliSc45IkvOOOJJLjiiS
        y44YkjmOCJJ5Dv+SuQ7vkvkO35ISh2dJmcOvpNThVVLu8CmpcXiU1Dn8SWod3iT1jpxvaIaHWhwrRxdT
        4YBDIh7HN3q0i8dxtbQ+CnM5rL9P+By2Ek6HpYTXYSfhdlhJ+B02EgmHhUTGoS+RcmhL5By6EkmHpkTW
        oSeRdmhJ5B06Eg2HhkTHIS/RckhL9ByyEk2HpETXISfRdkhJ9B0yEguHhMTGwX+t3sqR39a0liczR87v
        tJglQ0de0GqOLB35jZYzZOrIS1rfnq0jP9KA5owdeUcTWrN25Dsa0Zi5Y3sY0pS5Y/lCM9oydzCdocAB
        xzg4hsEBxzg4hsEBxzg4hsEBxzg4hsEBxzg4hsHh0XF/U7MjDh2b9KV8V1w6UrnEqaNY4tZRKHHsKJK4
        dhRInDtmS9w7ZkoCOGZJQjhmSII4LkrCOC5IAjnOSkI5zkiCOU5KwjlOSAI6JiUhHROSoI4jSVjHJ0lg
        x0gS2jGQuHL0960tchwknhzpqZtV6CCJK8ffblaxo5e4cqQ/+1mP5Y695MmVI93vhz3T88pcOFI3re3O
        HT4c7RAnjrTdz2v5Ia0XR3/03db/I8ONI710I2+rJYOzldJ4HSmtuqEGEm5HWncHYH0JuyOljYVEwGEi
        EXEYSIQc6hIxh7JE0KEqEXUoSoQdahJxh5JEwaEiUXEoSJQc4hI1h7BE0SEqUXUISpQdYhJ1h5DEwCEi
        MXEISIwc7BIzB7PE0MEqMXUwSowdbBJzR7PkwYujUeLI0SRx5WiQOHNUS9w5KiUOHQfJ3XRfp3rtHTt6
        y7wU1B8S6dju0HQmFYkGREWiAkmb3UK6FX0UQgghhBBCCCGE/oNS+gdhn1EEXJmXLgAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>